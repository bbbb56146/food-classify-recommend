# import the necessary packages
import os

# initialize the path to the *original* input directory of images
ORIG_INPUT_DATASET = "/Volumes/APPLE HDD/origin"

# initialize the base path to the *new* directory that will contain
# our images after computing the training and testing split
BASE_PATH = "/Volumes/APPLE HDD/kfood"

# define the names of the training, testing, and validation
# directories
TRAIN = "training"
TEST = "evaluation"
VAL = "validation"

# initialize the list of class label names
CLASSES = ['떡꼬치', '편육', '후라이드치킨', '콩자반', '젓갈', '양념치킨', '과메기', '피자', '육회', '물회', '알밥', '누룽지', '김치볶음밥', '김밥', '비빔밥', '새우볶음밥', '유부초밥', '잡곡밥', '주먹밥', '회무침', '꽈리고추무침', '도라지무침', '콩나물무침', '홍어무침', '잡채', '도토리묵', '만두', '더덕구이', '떡갈비', '갈비구이', '훈제오리', '장어구이', '삼겹살', '불고기', '황태구이', '조기구이', '조개구이', '갈치구이', '고등어구이', '곱창구이', '닭갈비', '미역줄기볶음', '고사리나물', '가지볶음', '애호박볶음', '숙주나물', '시금치나물', '갈비탕', '매운탕', '감자탕', '추어탕', '곰탕_설렁탕', '삼계탕', '보쌈', '육개장', '북엇국', '콩나물국', '무국', '계란국', '미역국', '떡국_만두국', '시래기국', '간장게장', '양념게장', '물냉면', '수제비', '콩국수', '막국수', '열무국수', '비빔냉면', '짜장면', '쫄면', '칼국수', '잔치국수', '라면', '짬뽕', '곱창전골', '꿀떡', '경단', '송편', '파전', '계란말이', '동그랑땡', '호박전', '생선전', '김치전', '계란후라이', '감자전', '멍게', '산낙지', '순대', '찜닭', '계란찜', '닭볶음탕', '꼬막찜', '김치찜', '해물찜', '갈비찜', '족발', '수육', '깻잎장아찌', '한과', '약과', '약식', '식혜', '수정과', '라볶이', '고추장진미채볶음', '멸치볶음', '제육볶음', '소세지볶음', '어묵볶음', '건새우볶음', '오징어채볶음', '두부김치', '떡볶이', '주꾸미볶음', '감자채볶음', '코다리조림', '갈치조림', '감자조림', '우엉조림', '땅콩조림', '메추리알장조림', '두부조림', '연근조림', '장조림', '고등어조림', '꽁치조림', '새우튀김', '오징어튀김', '고추튀김', '깍두기', '무생채', '나박김치', '백김치', '오이소박이', '갓김치', '열무김치', '파김치', '배추김치', '부추김치', '총각김치', '순두부찌개', '김치찌개', '된장찌개', '동태찌개', '닭계장', '호박죽', '전복죽']

# set the batch size
BATCH_SIZE = 32

# initialize the label encoder file path and the output directory to
# where the extracted features (in CSV file format) will be stored
LE_PATH = os.path.sep.join(["/Volumes/APPLE HDD/output", "le.cpickle"])
BASE_CSV_PATH = "/Volumes/APPLE HDD/output"

# set the path to the serialized model after training
MODEL_PATH = os.path.sep.join(["/Volumes/APPLE HDD/output", "model.cpickle"])